---
tags: engineering/data, data-warehouse, data-vault
author: Bach Phuong
date: 2022-12-15
---

## Introduction
Modelling data is one of the most important when engineer build data lake.In the past, we have several ways to build and model data such as : 3NF, star schema model,
snowflake model. However, there are some limitations when using these models such as: cann't track historical data, problem when change relationship of source table.
In order to solve these problem, new substitute is designed :Data Vault.In this article, I will show basic knowledge of data vault and some pros and cons of it.

## Overview of data vault
Data Vault is created by Dan Linstedt and his team at Lockheed Martin in the early 90s. Data Vault is a data modelling technique for primarily structured data. It
comprises a set of patterns and modelling guidelines that are used to represent the data in the model. There are 3 main components in data vault model: business entities
(hub), relationship(links) and additional context information (satellites). While Data Vault directly represents features of business entities, the result model reflect
business knowledge. I will explain detail characteristic of 3 main components through below example: 

## Example of data vault
Firstly, we need to define steps to modelling data vault: 
1.Define relationship database
2.Define hub table
3.Define link table ( type of link table: HAL link or standard link..)
4.Define sat table (type of sat table: effective sat table, change log sat,..)
5.Create dim/fact table in business vault
6.Tunning performance
7.Data mart

We can have an example of data vault model here. For example, we have relationship database as example: 
Employee table: employee_id(PK),job_id(FK),department_id(FK), hire_Date,salary,first_name,last_name,manager_id
Job table: job_id(PK) , job_name, min_salary,max_salary
Department table: department_id(PK), department_name, location_id
Location table: location_id(PK), street, city, district
From these tables, we will create hub,link and sattelite:
Hub_employee: HK_employee(hask key of employee_id), employee_id,load_dts, source
Hub_job: HK_job(hask key of job_id), job_id,load_dts, source
Hub_department: HK_department(hask key of department_id), department_id,load_dts, source
Hub_location: HK_location(hask key of location_id), location_id,load_dts, source
Link_employee: Emp_Job_Dep_HK(Hask key of employee_id,job_id,department_id),employee_id,job_id,department_id,load_dts,source
Link_department: Dep_Loc_HK(Hask key of department_id,location_id),department_id,location_id,load_dts,source
HAL_link: HAL_HK(hask key of manager_id,employee_id),manager_id,employee_id,load_Dts,source
Sat_employee: HK_employee(hask key of employee_id),first_name,last_name, email,phone_number
Sat_location: HK_location(hash key of location_id), street,city,district

Each hub will represent for entity in database, so the primary key is the hash key of business key. By using hash key, the query performance will be faster than
using business key to join in database. We have some rules applying in hub model: a hub must not have direct connection with other hubs,any connections must be
modelled by link, hubs are to be loaded from both master data and transactional data. While hub cann't connect to other hub, link is connected to at least 2 hubs and
can be connected to other links.We have different type of links for different connections: hierarchy link , same as link,standard link,..Last but not least, sat table
add context information for hub table. Sat table can only be connected to links or hubs and only has source system as source

From the raw vault above, we can create dimensional and fact model. And then, end user can create some views or aggregate table from models in data warehouse.

## Props and cons of data vault
So why we using data vault model rather than 3Nf model ? Firstly, extensibility is a good advantage of data vault. Our model can easily be extended if the need arise
without modificaions to the existing table. In this case, we just need to add different and diverse source system to our model. The benefit may not be seen in small 
volume data, but it can bring huge benefit with large complex system.Another prop is that data can be audited. By using data vault, data is stored historical so full 
data is alway available. Change only apply for business vault, so you can track all change log of your data. In addtion to 2 biggest benefit, the stability and load-
efficiency (parallel loaded data to raw data vault) also improve performance of model. However, we also face some challenge for data vault. Firstly, the number of
raw table will be doubled or 3-fold higher than source table, which lead to high effort to maintain it. Sometime, performance of querying is also affected because of 
large number of tables. Lastly, data vault is rarely supported by analytic tool, so we need to convert it in data mart before using analytic tool.

## References
 - https://www.phdata.io/blog/building-modern-data-platform-with-data-vault/
 - https://www.databricks.com/glossary/data-vault
